{"attributes": {"fullName": "qx.module.Traversing", "packageName": "qx.module", "isStatic": true, "type": "bootstrap", "name": "Traversing"}, "type": "class", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> traversal module</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"access": "internal", "isInternal": true, "line": 171, "isStatic": true, "name": "__getAncestors"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector that indicates where to stop including\nancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper for getAncestors and getAncestorsUntil</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "__getAncestors", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 601, "isStatic": true, "name": "__hierarchyHelper"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "collection"}, "type": "param", "children": [{"attributes": {"text": "<p>Collection to iterate over (any Array-like object)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "method"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the qx.dom.Hierarchy method to apply</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector that elements to be included\nmust match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper function that iterates over a set of items and applies the given\nqx.dom.Hierarchy method to each entry, storing the results in a new Array.\nDuplicates are removed and the items are filtered if a selector is\nprovided.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "__hierarchyHelper", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Result array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 40, "isStatic": true, "name": "add"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to add to the collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds an element to the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "add", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 309, "isStatic": true, "name": "eq"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The position of the element in the collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Reduce the set of matched elements to a single element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "eq", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing one element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 251, "isStatic": true, "name": "filter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression or filter function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a new collection containing only those elements that passed the\ngiven filter. This can be either a selector expression or a filter\nfunction.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "filter", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the elements that passed the filter</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 233, "isStatic": true, "name": "find"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression to match the child elements\nagainst</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Searches the child elements of each item in the collection and returns\na new collection containing the children that match the provided selector</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "find", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the matching child elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 78, "isStatic": true, "name": "forEach"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fn"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "ctx"}, "type": "param", "children": [{"attributes": {"text": "<p>Context object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Obj"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Executes the provided callback function once for each item in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"name": "qx.type.BaseArray#forEach"}, "type": "see"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "forEach", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 138, "isStatic": true, "name": "getAncestors"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing all ancestors of each element in the\ncollection.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getAncestors", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 156, "isStatic": true, "name": "getAncestorsUntil"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector that indicates where to stop including\nancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing all ancestors of each element in the\ncollection, up to (but not including) the element matched by the provided\nselector.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getAncestorsUntil", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 56, "isStatic": true, "name": "getChildren"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing all of the unique immediate children of\neach of the matched set of elements.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getChildren", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the child elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 201, "isStatic": true, "name": "getClosest"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set containing the closest matching ancestor for each item in\nthe collection.\nIf the item itself matches, it is added to the new set. Otherwise, the\nitem&#8217;s parent chain will be traversed until a match is found.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getClosest", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the closest matching ancestors</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 276, "isStatic": true, "name": "getContents"}, "type": "method", "children": [{"attributes": {"text": "<p>Gets a new set of elements containing the child nodes of each item in the\ncurrent set.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getContents", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the child nodes</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 582, "isStatic": true, "name": "getDocument"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to get the document for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the owner document of the given node</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getDocument", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The document of the given <span class=\"caps\">DOM</span> node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 320, "isStatic": true, "name": "getFirst"}, "type": "method", "children": [{"attributes": {"text": "<p>Reduces the collection to the first element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getFirst", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing one element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 331, "isStatic": true, "name": "getLast"}, "type": "method", "children": [{"attributes": {"text": "<p>Reduces the collection to the last element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getLast", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing one element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 366, "isStatic": true, "name": "getNext"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the next sibling element of each item in\nthe current set (ignoring text and comment nodes).\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getNext", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing next siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 385, "isStatic": true, "name": "getNextAll"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing all following sibling elements of each\nitem in the current set (ignoring text and comment nodes).\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getNextAll", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing following siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 400, "isStatic": true, "name": "getNextUntil"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the following sibling elements of each\nitem in the current set (ignoring text and comment nodes) up to but not\nincluding any element that matches the given selector.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getNextUntil", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing following siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 522, "isStatic": true, "name": "getOffsetParent"}, "type": "method", "children": [{"attributes": {"text": "<p>Gets a new collection containing the offset parent of each item in the\ncurrent set.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getOffsetParent", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing offset parents</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 115, "isStatic": true, "name": "getParents"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing the parent of each element in the\ncollection.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getParents", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the parent elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 426, "isStatic": true, "name": "getPrev"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the previous sibling element of each item in\nthe current set (ignoring text and comment nodes).\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getPrev", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing previous siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 445, "isStatic": true, "name": "getPrevAll"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing all preceding sibling elements of each\nitem in the current set (ignoring text and comment nodes).\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getPrevAll", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing preceding siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 460, "isStatic": true, "name": "getPrevUntil"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the preceding sibling elements of each\nitem in the current set (ignoring text and comment nodes) up to but not\nincluding any element that matches the given selector.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getPrevUntil", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing preceding siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 486, "isStatic": true, "name": "getSiblings"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing all sibling elements of the items in the\ncurrent set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getSiblings", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing sibling elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 570, "isStatic": true, "name": "getWindow"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to inspect</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the DOM2 <code>defaultView</code> (window) for the given node.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "getWindow", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <code>defaultView</code> for the given node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"line": 344, "isStatic": true, "name": "has"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing only the elements that have descendants\nmatching the given selector</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "has", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a new collection containing only elements with matching descendants</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 294, "isStatic": true, "name": "is"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression or filter function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if at least one element in the collection passes the provided\nfilter. This can be either a selector expression or a filter\nfunction</p>"}, "type": "desc"}, {"attributes": {"name": "qx.type.BaseArray#filter"}, "type": "see"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "is", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if at least one element matches"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 558, "isStatic": true, "name": "isDocument"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given object is a <span class=\"caps\">DOM</span> document object</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "isDocument", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a DOM document"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 534, "isStatic": true, "name": "isElement"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given object is a <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "isElement", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a DOM element"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 546, "isStatic": true, "name": "isNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given object is a <span class=\"caps\">DOM</span> node</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "isNode", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a DOM node"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 501, "isStatic": true, "name": "not"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector or filter function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove elements from the collection that do not pass the given filter.\nThis can be either a selector expression or a filter function</p>"}, "type": "desc"}, {"attributes": {"name": "qx.type.BaseArray#filter"}, "type": "see"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "not", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Reduced collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 94, "isStatic": true, "name": "slice"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "begin"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to begin.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "", "name": "end"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to end.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a copy of the collection within the given range.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "q", "sourceMethod": "slice", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing a slice of the original collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}]}]}